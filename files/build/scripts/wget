#!/bin/bash

BUILDINFO_PATH="/usr/local/share/buildinfo"
VERSION_FILE="${BUILDINFO_PATH}/versions/versions-web"
LOG_PATH="${BUILDINFO_PATH}/log"
VERSOIN_LOG_FILE="${BUILDINFO_PATH}/diff-versions/versions-web"

[ -z $REAL_COMMAND ] && REAL_COMMAND=/usr/bin/wget

. $BUILDINFO_PATH/config/buildinfo.config

# Get the URL protocal and DNS, remove the specified path in the tail
URL_PREFIX=$(echo "${PACKAGE_URL_PREFIX}" | sed -E "s#(//[^/]*/).*#\1#")
paras=($@)
for (( i=0; i<${#paras[@]}; i++ ))
do
    para=${paras[$i]}
    if [[ "$para" == *://* ]]; then
        package_url=$para

        # If the package url is in the same file storage, not necessary to use the file version
        if echo "$package_url" | grep -q "$URL_PREFIX"; then
            break
        fi

        # If the version file contains the package, redirect to the specified version in the file storage
        if [ -f $VERSION_FILE ] && grep "^${package_url}==" $VERSION_FILE; then
            version=$(grep "^${package_url}=" $VERSION_FILE | awk -F"==" '{print $NF}')
            filename=$(echo $package_url | awk -F"/" '{print $NF}')
            version_filename="${filename}-${version}"
            paras[$i]="${PACKAGE_URL_PREFIX}${version_filename}"
            ${REAL_COMMAND} ${paras[@]}
            result=$?
            if [ $result -ne 0 ]; then
                REAL_VERSION = $(wget -qO - "$package_url" | md5sum | cut -d' ' -f1)
                [ "$version" != "${REAL_VERSION}" ] || exit 1
            else
                [ -f "$version_filename" ] && mv -f "${version_filename}" "${filename}"
                exit 0
            fi
        else
            if [ "$SONIC_ENFORCE_VERSIONS" == "y" ]; then
                echo "Failed to get version config for the package url: $package_url"
                exit 1
            fi

            mkdir -p $LOG_PATH
            echo ${package_url} >> ${VERSOIN_LOG_FILE}
        fi
    fi
done

${REAL_COMMAND} $@
